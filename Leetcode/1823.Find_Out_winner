class Solution {
    public int findTheWinner(int n, int k) {
        Queue<Integer> queue = new LinkedList<>();

        // Add all friends to the queue
        for (int i = 1; i <= n; i++) {
            queue.add(i);
        }

        // Eliminate friends until only one remains
        while (queue.size() > 1) {
            // Move the first (k-1) friends to the back
            for (int i = 1; i < k; i++) {
                queue.add(queue.poll());
            }
            // Eliminate the k-th friend
            queue.poll();
        }

        // Return the last remaining friend
        return queue.peek();
    }
}


// OPTIMIZED SOLUTION FOR THIS QUESTION  WITH O(1) TIME COMPLEXITY

class Solution {
    int solve(int n,int k)
    {
        if(n==0) return 0;
        return (solve(n-1,k)+k)%n;
    }
    public int findTheWinner(int n, int k) {
        return solve(n,k)+1;
    }
}
